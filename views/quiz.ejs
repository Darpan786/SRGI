<%- include("partials/header"); -%>

<br />
<br />
<br />
<br />

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Quiz</title>
    <style>
      body {
        font-size: 20px;
        font-family: monospace;
      }
      #container {
        margin: 20px auto;
        background-color: white;
        height: 300px;
        width: 700px;
        border-radius: 5px;
        box-shadow: 0px 5px 15px 0px;
        position: relative;
      }
      #start {
        font-size: 1.5em;
        font-weight: bolder;
        word-break: break-all;
        width: 100px;
        height: 150px;
        border: 2px solid lightgrey;
        text-align: center;
        cursor: pointer;
        position: absolute;
        left: 300px;
        top: 50px;
        color: lightgrey;
      }
      #start:hover {
        border: 3px solid lightseagreen;
        color: lightseagreen;
      }

      #qImg {
        width: 200px;
        height: 200px;
        position: absolute;
        left: 0px;
        top: 0px;
      }
      #qImg img {
        width: 200px;
        height: 200px;
        border-top-left-radius: 5px;
      }

      #question {
        width: 500px;
        height: 125px;
        position: absolute;
        right: 0;
        top: 0;
      }
      #question p {
        margin: 0;
        padding: 15px;
        font-size: 1.25em;
      }

      #choices {
        width: 480px;
        position: absolute;
        right: 0;
        top: 125px;
        padding: 10px;
      }
      .choice {
        display: inline-block;
        width: 135px;
        text-align: center;
        border: 1px solid grey;
        border-radius: 5px;
        cursor: pointer;
        padding: 5px;
      }
      .choice:hover {
        border: 2px solid grey;
        font-weight: bold;
      }

      #timer {
        position: absolute;
        height: 100px;
        width: 200px;
        bottom: 0px;
        text-align: center;
      }
      #counter {
        font-size: 3em;
      }
      #btimeGauge {
        width: 150px;
        height: 10px;
        border-radius: 10px;
        background-color: lightgray;
        margin-left: 25px;
      }
      #timeGauge {
        height: 10px;
        border-radius: 10px;
        background-color: mediumseagreen;
        margin-top: -10px;
        margin-left: 25px;
      }
      #progress {
        width: 500px;
        position: absolute;
        bottom: 0px;
        right: 0px;
        padding: 5px;
        text-align: right;
      }
      .prog {
        width: 25px;
        height: 25px;
        border: 1px solid #000;
        display: inline-block;
        border-radius: 50%;
        margin-left: 5px;
        margin-right: 5px;
      }
      #scoreContainer {
        margin: 20px auto;
        background-color: white;
        opacity: 0.8;
        height: auto;
        width: auto;
        border-radius: 5px;
        box-shadow: 0px 5px 15px 0px;
        position: relative;
        display: none;
      }
      #scoreContainer img {
        position: fixed;
        top: 1px;
        left: 20px;
        bottom: -8px;
      }
      #scoreContainer p {
        position: absolute;
        display: block;
        width: auto;
        height: 100%;
        top: 130px;
        left: 325px;
        font-size: 1.5em;
        font-weight: bold;
        text-align: center;
      }

      /* @import "bourbon";

canvas {
  display: flex;
  width: 2000px;
  height: 2000px;
  margin: 0 auto;
} */
    </style>
  </head>
  <body>
    <div id="container">
      <div id="start">Start Quiz!</div>
      <div id="quiz" style="display: none;">
        <div id="question"></div>
        <div id="qImg"></div>
        <div id="choices">
          <div class="choice" id="A" onclick="checkAnswer('A')"></div>
          <div class="choice" id="B" onclick="checkAnswer('B')"></div>
          <div class="choice" id="C" onclick="checkAnswer('C')"></div>
        </div>
        <div id="timer">
          <div id="counter"></div>
          <div id="btimeGauge"></div>
          <div id="timeGauge"></div>
        </div>
        <div id="progress"></div>
      </div>
      <div id="scoreContainer" style="display: none;"></div>
    </div>
    <script>
      // select all elements
      const start = document.getElementById("start");
      const quiz = document.getElementById("quiz");
      const question = document.getElementById("question");
      const qImg = document.getElementById("qImg");
      const choiceA = document.getElementById("A");
      const choiceB = document.getElementById("B");
      const choiceC = document.getElementById("C");
      const counter = document.getElementById("counter");
      const timeGauge = document.getElementById("timeGauge");
      const progress = document.getElementById("progress");
      const scoreDiv = document.getElementById("scoreContainer");

      // create our questions
      let questions = [
        {
          question:
            "The general law of mechanics that stress is directly proportional to strain?",
          imgSrc:
            "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/logo-2.jpeg?alt=media&token=9c0cbed8-d5fb-410a-a6cd-3a8d4251c56f",
          choiceA: "Hooke’s law",
          choiceB: "Boyle’s law",
          choiceC: "Shearing stress",
          correct: "A",
        },
        {
          question: "What is the unit of work?",
          imgSrc:
            "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/logo-2.jpeg?alt=media&token=9c0cbed8-d5fb-410a-a6cd-3a8d4251c56f",
          choiceA: "Newton meter per second",
          choiceB: "One Newton meter or one Joule",
          choiceC: "Newton meter squared",
          correct: "B",
        },

        {
          question: "Which mouse click is used to select item?  ",
          imgSrc:
            "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/logo-2.jpeg?alt=media&token=9c0cbed8-d5fb-410a-a6cd-3a8d4251c56f",
          choiceA: "Double click",
          choiceB: "Single click",
          choiceC: "Drag and drop",
          correct: "B",
        },
        {
          question: "Which key allows to cancel an operation?",
          imgSrc:
            "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/logo-2.jpeg?alt=media&token=9c0cbed8-d5fb-410a-a6cd-3a8d4251c56f",
          choiceA: "Shift key",
          choiceB: "Escape key",
          choiceC: "Enter key",
          correct: "B",
        },
        {
          question: "This key is used with other keys for different purposes.",
          imgSrc:
            "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/logo-2.jpeg?alt=media&token=9c0cbed8-d5fb-410a-a6cd-3a8d4251c56f",
          choiceA: "Shift key",
          choiceB: "Backspace key",
          choiceC: "Enter key",
          correct: "A",
        },
        {
          question:
            "Why a man sitting in a moving bus suddenly moves forward when the bus suddenly stops?",
          imgSrc:
            "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/logo-2.jpeg?alt=media&token=9c0cbed8-d5fb-410a-a6cd-3a8d4251c56f",
          choiceA: "Due to brakes",
          choiceB: "Due to force exerted by the machine",
          choiceC: "Due to inertia",
          correct: "C",
        },
        {
          question: "Why are transition elements called so?",
          imgSrc:
            "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/logo-2.jpeg?alt=media&token=9c0cbed8-d5fb-410a-a6cd-3a8d4251c56f",
          choiceA: "Variable valency",
          choiceB: "Having different colors",
          choiceC: "Both A and B",
          correct: "C",
        },
        {
          question:
            "Which property of metals is used for making bells and strings of musical instruments like Sitar and Violin?",
          imgSrc:
            "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/logo-2.jpeg?alt=media&token=9c0cbed8-d5fb-410a-a6cd-3a8d4251c56f",
          choiceA: " Sonorousness",
          choiceB: "Malleability",
          choiceC: "Ductility",
          correct: "A",
        },
        {
          question:
            "Which of the following pairs will give dis-placement reactions?",
          imgSrc:
            "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/logo-2.jpeg?alt=media&token=9c0cbed8-d5fb-410a-a6cd-3a8d4251c56f",
          choiceA: " FeSO4 solution and Copper metal",
          choiceB: "AgNO3 solution and Copper metal",
          choiceC: " CuSO4 solution and Silver metal",
          correct: "B",
        },
        {
          question:
            "The highly reactive metals like Sodium, Potas-sium, Magnesium, etc. are extracted by the",
          imgSrc:
            "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/logo-2.jpeg?alt=media&token=9c0cbed8-d5fb-410a-a6cd-3a8d4251c56f",
          choiceA: " electrolysis of their molten chloride",
          choiceB: "electrolysis of their molten oxides",
          choiceC: "reduction by aluminium",
          correct: "A",
        },
      ];

      // create some variables

      const lastQuestion = questions.length - 1;
      let runningQuestion = 0;
      let count = 0;
      const questionTime = 30; // 10s
      const gaugeWidth = 150; // 150px
      const gaugeUnit = gaugeWidth / questionTime;
      let TIMER;
      let score = 0;

      // render a question
      function renderQuestion() {
        let q = questions[runningQuestion];

        question.innerHTML = "<p>" + q.question + "</p>";
        qImg.innerHTML = "<img src=" + q.imgSrc + ">";
        choiceA.innerHTML = q.choiceA;
        choiceB.innerHTML = q.choiceB;
        choiceC.innerHTML = q.choiceC;
      }

      start.addEventListener("click", startQuiz);

      // start quiz
      function startQuiz() {
        start.style.display = "none";
        renderQuestion();
        quiz.style.display = "block";
        renderProgress();
        renderCounter();
        TIMER = setInterval(renderCounter, 1000); // 1000ms = 1s
      }

      // render progress
      function renderProgress() {
        for (let qIndex = 0; qIndex <= lastQuestion; qIndex++) {
          progress.innerHTML += "<div class='prog' id=" + qIndex + "></div>";
        }
      }

      // counter render

      function renderCounter() {
        if (count <= questionTime) {
          counter.innerHTML = count;
          timeGauge.style.width = count * gaugeUnit + "px";
          count++;
        } else {
          count = 0;
          // change progress color to red
          answerIsWrong();
          if (runningQuestion < lastQuestion) {
            runningQuestion++;
            renderQuestion();
          } else {
            // end the quiz and show the score
            clearInterval(TIMER);
            scoreRender();
          }
        }
      }

      // checkAnwer

      function checkAnswer(answer) {
        if (answer == questions[runningQuestion].correct) {
          // answer is correct
          score++;
          // change progress color to green
          answerIsCorrect();
        } else {
          // answer is wrong
          // change progress color to red
          answerIsCorrect();
        }
        count = 0;
        if (runningQuestion < lastQuestion) {
          runningQuestion++;
          renderQuestion();
        } else {
          // end the quiz and show the score
          clearInterval(TIMER);
          scoreRender();
        }
      }

      // answer is correct
      function answerIsCorrect() {
        document.getElementById(runningQuestion).style.backgroundColor = "#0f0";
      }

      // answer is Wrong
      function answerIsWrong() {
        document.getElementById(runningQuestion).style.backgroundColor = "#f00";
      }

      // score render
      function scoreRender() {
        scoreDiv.style.display = "inline";

        // calculate the amount of question percent answered by the user
        const scorePerCent = Math.round((100 * score) / questions.length);

        // choose the image based on the scorePerCent
        let img =
          scorePerCent >= 80
            ? "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/q1.jpeg?alt=media&token=b256f9af-65d5-4831-b858-8198a3ca0563"
            : scorePerCent >= 60
            ? "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/q2.jpeg?alt=media&token=0ceac1c9-4bc3-4277-b18e-33130c2c1ea8"
            : scorePerCent >= 40
            ? "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/q3.jpeg?alt=media&token=3914bbbb-f092-4b3d-992b-3c7ad1d6b1b3"
            : scorePerCent >= 20
            ? "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/q4.jpeg?alt=media&token=786c584f-e0d9-4f1d-a882-f1327e02a482"
            : "https://firebasestorage.googleapis.com/v0/b/covid-25b82.appspot.com/o/q5.jpeg?alt=media&token=3fe9d819-7dd4-43e9-a89c-3ac4140379fa";

        scoreDiv.innerHTML = "<img src=" + img + ">";
        // scoreDiv.innerHTML += "<p>" + scorePerCent + "%</p>";
      }
    </script>
  </body>
</html>
<%- include("partials/footer"); -%>
